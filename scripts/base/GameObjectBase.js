export class GameObject extends createjs.Container {
  constructor(graphic) {
    super();

    if (graphic !== undefined) {
      this.graphic = graphic;
      this.addChild(this.graphic);
    }

    // symbol graphics generated by Adobe Animate come with a nominalBounds which is the dimension of the graphic. But CreateJS uses setBounds and getBounds methods for symbol dimensions. For each graphic, we set the default object bounds to the exported graphics nominalBounds
    let bounds = this.graphic.nominalBounds;
    this.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);
  }
}

export class MoveableGameObject extends GameObject {
  constructor(graphic, store) {
    super(graphic);
    // console.log("MOVEABLE", store);
    this.store = store;
    this.velocity = {
      x: 0,
      y: 0
    };

    this.onGround = false;
    this.moveable = true;
    this.on("tick", this.tick);

    // this.store.subscribe((state, action) => {
    //   let { worldLevelComplete, heroFallen } = state.world;
    //   let listener;

    //   if (!worldLevelComplete && !heroFallen) {
    //     listener = this.on("tick", this.tick);
    //   } else {
    //     listener.off("tick", this.tick);
    //   }
    // })
  }

  tick(e) {
    let { worldLevelComplete, heroFallen } = this.store.state.world;

    if (!worldLevelComplete && !heroFallen) {
      this.y += this.velocity.y;
      this.x += this.velocity.x;
    } else {
      this.freeze();
      // e.remove();
    }
  }

  freeze() {
    console.log("FREEZE");
    this.moveable = false;
    if (this.stop) {
      // this.stop();
    }
  }
}
